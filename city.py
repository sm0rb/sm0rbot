import json
import config
from sqlighter import SQLighter

class City_game():

    def __init__(self):
        """–î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–º–∏ –∏ —Å–ø–∏—Å–æ–∫–æ–º –≥–æ—Ä–æ–¥–æ–≤"""
        self.save_game = dict()
        self.cities = None

    def check_user(self, user_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è id –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è—Ö"""
        return user_id in self.save_game

    def add_user(self, user_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ user –≤ —Å–ª–æ–≤–∞—Ä—å"""
        self.save_game[user_id] = ['', []]

    def parse_city_json(self, json_file='russia.json'): #–ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –≥–æ—Ä–æ–¥–∞–º–∏
        """–ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤"""
        p_obj = None
        try:
            js_obj = open(json_file, "r", encoding="utf-8")
            p_obj = json.load(js_obj)
        except Exception as err:
            print(err)
            return None
        finally:
            js_obj.close()   
        self.cities = [city['city'].lower() for city in p_obj]

    def get_city(self, user_id, city):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∏ –ø—Ä–æ—á–µ–µ"""

        def is_correct_city_name(city):
            """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –±—É–∫–≤—ã"""
            return city[-1].isalpha()

        def winer():
            config.winerBool = True
            return '–Ø –Ω–µ –∑–Ω–∞—é –≥–æ—Ä–æ–¥–∞ –Ω–∞ —ç—Ç—É –±—É–∫–≤—Éüò∞\nüéâ–¢—ã –≤—ã–∏–≥—Ä–∞–ªüéâ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—éü•≥'

        self.cities_already_named = self.save_game[user_id][1]

        normilize_city = city.strip().lower()           #—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
        if is_correct_city_name(normilize_city):        #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏—é –≥–æ—Ä–æ–¥–∞
            if normilize_city[-1] in ('—å', '—ä', '—ã', '–π'):   #–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –±—É–∫–≤—ã
                normilize_city = normilize_city[:-1]

            if self.save_game[user_id][0] != "" and normilize_city[0] != self.save_game[user_id][0][-1]:    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã
                return '–ì–æ—Ä–æ–¥ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ "{0}"!ü§ì'.format(self.save_game[user_id][0][-1])

            if normilize_city not in self.cities_already_named:      #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑—ã–≤–∞–ª—Å—è –ª–∏ –≥–æ—Ä–æ–¥
                self.cities_already_named.append(normilize_city)        #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
                last_latter_city = normilize_city[-1]           
                proposed_names = list(filter(lambda x: x[0] == last_latter_city, self.cities)) #—Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É
                if proposed_names:
                    for city in proposed_names:
                        if city not in self.cities_already_named:    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑—ã–≤–∞–ª—Å—è –ª–∏ –≥–æ—Ä–æ–¥
                            self.cities_already_named.append(city)      #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
                            if city[-1] in ('—å', '—ä', '—ã', '–π'):
                                self.save_game[user_id][0] = city[:-1]
                            else:
                                self.save_game[user_id][0] = city
                            return city.capitalize()
                return winer()
            else:
                return '–ì–æ—Ä–æ–¥ —É–∂–µ –±—ã–ªüòù\n–î–∞–≤–∞–π –¥—Ä—É–≥–æ–πü§ì'
        else:
            return '–ù–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—åüßê\n‚ùå–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞‚ùå\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑'

    def refresh(self, user_id):
        self.save_game[user_id][0] = ""
        self.save_game[user_id][1].clear()