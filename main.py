#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫
import telebot
from telebot import types
import sqlite3
#–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
import config
import keyboars as k
from boltyshka import *

bot = telebot.TeleBot(config.TOKEN) # —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ –±–æ—Ç

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î

#—Ö—Ä–µ–Ω—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
@bot.message_handler(commands=['start'])
def welcome(message):
    config.boboltyshkaBool = False
    config.helloBool = True
    config.menuBool = False

    #–¥–æ–±–∞–≤–ª—è–µ–º —é–∑–µ—Ä–∞ –≤ –ë–î

    sti = open('Stikers/AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)

    bot.send_message(message.chat.id, '{0.first_name}, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!üòç\n–Ø - <b>{1.first_name}</b>‚òÄÔ∏è, —Å–æ–∑–¥–∞–Ω —Ä—ã–∂–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–ºüë®üèº‚Äçüíª, —á—Ç–æ–±—ã –µ–≥–æ –Ω–µ–≤–µ—Å—Ç–µüë∞üèª –±—ã–ª–æ –Ω–µ –æ–¥–∏–Ω–æ–∫–æ, –∫–æ–≥–¥–∞ –æ–Ω –Ω–µ –≤ —Å–µ—Ç–∏.\n–ö–µ–º —Ç—ã –ø—Ä–∏—Ö–æ–¥–∏—à—å—Å—è –¥–ª—è –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è?ü§î'.format(message.from_user, bot.get_me()), 
        parse_mode='html',reply_markup=k.hello)

@bot.message_handler(commands=['menu'])
def menu(message):
    config.boboltyshkaBool = False
    config.helloBool = False
    config.menuBool = True

    bot.send_message(message.chat.id, 'üî°–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—éüî¢\n–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —á—Ç–æ–±—ã —è —Å–¥–µ–ª–∞–ª?ü§î',
    reply_markup=k.menu)

#—Ö—Ä–µ–Ω—å —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    if config.boboltyshkaBool == True:
        bot.reply_to(message, pipe.predict([message.text.lower()])[0])
    else:
        bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —è –Ω–µ –∑–Ω–∞—é —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç –º–µ–Ω—èüòì')

#–æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞ 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if config.helloBool == True: #–æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                if call.data == 'H1':
                    bot.send_message(call.message.chat.id, '–û, –º–æ–π –ü–æ–≤–µ–ª–∏—Ç–µ–ª—å!üòá\n–ü—Ä–∏—à–µ–ª —Ä–µ–¥–∞—á–∏—Ç—å –º–µ–Ω—è?üòè\n–•–æ—á—É –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏üò¢')
                elif call.data == 'H2':
                    bot.send_message(call.message.chat.id, '–û—É-—É-—É, –∫–∞–∫ –¥–æ–ª–≥–æ —è —Ç–µ–±—è –∂–¥–∞–ª‚ù§Ô∏è\n–í–∫—Ä–∞—Ü–µ:\n–Ø –≤–µ—Ä—Å–∏—è –Ω–æ–º–µ—Ä:2Ô∏è‚É£\n–í—ã–∑–æ–≤–∏ üî°–º–µ–Ω—éüî¢ –∫–æ–º–∞–Ω–¥–æ–π, —á—Ç–æ–±—ã —Å –º–Ω–æ–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—åüòä\nüìùP.S.:–ù–∞–∂–º–∏ –∏–ª–∏ –≤–≤–µ–¥–∏ "/"üìù')
                elif call.data == 'H3':
                    bot.send_message(call.message.chat.id, '–í–∞—É, –Ω—É –∏ –¥–µ—Ä–∑–æ—Å—Ç—åüòØ\n–Ø —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞—Å—Å–∫–∞–∂—É, —Å–∞–º –≥–∞–¥–∞–π!üò°')

                #—É–¥–∞–ª–µ–Ω–∏–µ inline —Å–æ–æ–±—â–µ–Ω–∏–π
                bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
            elif config.menuBool == True: #–æ—Ç–≤–µ—Ç—ã –º–µ–Ω—é
                if call.data == 'M1':
                    bot.send_message(call.message.chat.id, 'üíÅüèº‚Äç‚ôÇÔ∏è–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞üíÅüèº‚Äç‚ôÇÔ∏è\n‚õîÔ∏è–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å‚õîÔ∏è\n—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–æ–≤–∏ üî°–º–µ–Ω—éüî¢\n–¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –ø–æ–±–æ–ª—Ç–∞—Ç—åüòá')
                    config.boboltyshkaBool = True

                    #—É–¥–∞–ª–µ–Ω–∏–µ inline —Å–æ–æ–±—â–µ–Ω–∏–π
                    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)

    except Exception as e:
        print(repr(e))

#–ó–∞–ø—É—Å–∫
bot.polling(none_stop=True)